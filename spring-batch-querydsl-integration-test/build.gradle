apply plugin: "io.spring.dependency-management"

dependencies {
	implementation project(path: ":spring-batch-querydsl-reader", configuration: 'default')

	implementation 'org.springframework.boot:spring-boot-starter-batch'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'com.h2database:h2'
	implementation 'org.mariadb.jdbc:mariadb-java-client'

	implementation "com.querydsl:querydsl-jpa"
	implementation "com.querydsl:querydsl-core"
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa" // querydsl JPAAnnotationProcessor 사용 지정
	annotationProcessor "jakarta.persistence:jakarta.persistence-api:2.2.3"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api:1.3.5"

	annotationProcessor 'org.projectlombok:lombok'
	implementation 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.batch:spring-batch-test'
}

// querydsl 적용
def generated='src/main/generated'
sourceSets {
	main.java.srcDirs += [ generated ]
}

tasks.withType(JavaCompile) {
	options.annotationProcessorGeneratedSourcesDirectory = file(generated)
}

clean.doLast {
	file(generated).deleteDir()
}