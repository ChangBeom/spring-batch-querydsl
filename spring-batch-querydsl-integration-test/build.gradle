plugins {
	id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
}

dependencies {
	implementation project(path: ":spring-batch-querydsl-reader", configuration: 'default')

	implementation 'org.springframework.boot:spring-boot-starter-batch'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'com.h2database:h2'
	implementation 'org.mariadb.jdbc:mariadb-java-client'

	implementation 'com.querydsl:querydsl-jpa'
	implementation 'com.querydsl:querydsl-apt'

	annotationProcessor 'org.projectlombok:lombok'
	implementation 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.batch:spring-batch-test'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

configurations {
	querydsl.extendsFrom compileClasspath
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

def querydslSrcDir = 'src/main/generated'

querydsl {
	library = "com.querydsl:querydsl-apt:4.3.1"
	jpa = true
	querydslSourcesDir = querydslSrcDir
}

sourceSets {
	main {
		java {
			srcDirs = ['src/main/java', querydslSrcDir]
		}
	}
}

compileQuerydsl{
	options.annotationProcessorPath = configurations.querydsl
}